Git is a version control system.

Git helps you keep track of code changes.

Git is used to collaborate on code.

Learning by Examples
In this tutorial, we will show you Git commands like this:

Example
git --version
git version 2.30.2.windows.1
For new users, using the terminal view can seem a bit complicated. Don't worry! We will keep it really simple, and learning this way gives you a good grasp of how Git works.

In the code above, you can see commands (input) and output.

Lines like this are commands we input:

Example
git --version
Lines like this are the output/response to our commands:

Example
git version 2.30.2.windows.1
In general, lines with $ in front of it is input. These are the commands you can copy and run in your terminal.

Change Platform:
Shift focus to GitHubGitHub
Shift focus to BitbucketBitbucket
Shift focus to GitLabGitLab
Git and Remote Repositories
Git and GitHub are different things.

In this tutorial you will understand what Git is and how to use it on the remote repository platforms, like GitHub.

You can choose, and change, which platform to focus on by clicking in the menu on the right:

Git Commit
Since we have finished our work, we are ready move from stage to commit for our repo.

Adding commits keep track of our progress and changes as we work. Git considers each commit change point or "save point". It is a point in the project you can go back to if you find a bug, or want to make a change.